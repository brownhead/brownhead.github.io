<!DOCTYPE html>
<html>
<head>
    <title>Projects - John Sullivan's Portfolio</title>

    <meta http-equiv="Content-Type" content="text/html;charset=utf-8" >
    <meta name="description" content="A listing of projects created by John Sullivan." />

    <link href="http://fonts.googleapis.com/css?family=Open+Sans:400,600&subset=latin" rel="stylesheet" type="text/css">
    <link href="http://fonts.googleapis.com/css?family=Pacifico&text=John%20Sullivan" rel="stylesheet" type="text/css">
    <link rel="stylesheet" href="http://yui.yahooapis.com/pure/0.2.0/pure-min.css">
    <link href="/res/css/flashy.css" rel="stylesheet" type="text/css">
    <style media="screen">
        .video { display: block; }
        .hidden-image { display: none; }
    </style>
    <style media="print">
        .video { display: none; }
        .hidden-image { display: block; }
    </style>
</head>
<body id="projects-page">
    <header id="top-header">
        <div id="nav-table">
            <div id="logo-container">
                <a id="logo" href="/index.htm">John Sullivan</a>
            </div>
            <nav id="top-nav">
                <ul>
                    <li class="selected"><a href="/projects.htm">Projects</a></li>
                    <li><a href="/about.htm">About Me</a></li>
                    <li><a href="http://johncs.com">Blog</a></li>
                    <li><a href="mailto:jsull003@ucr.edu">Contact</a></li>
                </ul>
            </nav>
        </div>
    </header>
    <div id="content">
        <article class="project">
            <header>
                <h2><a id="galah" href="#galah">Galah</a></h2>
                <span class="language">Python</span>
                <time datetime="2011/now">2011 to now</time>
            </header>
            <p class="project-headline">
                An automated grading system geared towards processing computer programming assignments.
            </p>
            <aside class="project-shot" data-video="http://www.youtube.com/embed/8VvS5MVAy7w?rel=0" data-width="420" data-height="315">
                <a href="/res/img/projectshots/galah.png">
                    <img class="project-shot" src="/res/img/projectshots/galah.png" alt="Galah Screenshot" />
                </a>
            </aside>
            <p>
                I began this project in 2011 with the intent of creating a scalable system that could grade CS students' assignments and provide near-instant feedback. In December 2012, the University of California, Riverside began using it in one of their classes. Now it is being used extensively in several courses including UCR's new online course offerings. The school hosts it at <a href="https://galah.cs.ucr.edu">galah.cs.ucr.edu</a>, but unfortunately you won't be able to play with it without being enrolled in a class.
            </p>
            <p>
                Galah is a distributed system that is (theoretically) able to scale up to any number of users. It tests each student's submission by placing their code in a clean virtual machine with the instructor's test harness. Galah is fairly stable and was able to perform well with no intervention whatsoever during my 3-month long internship over the summer of 2013.
            </p>
            <p>
                Most of my time outside of class and work has been devoted to Galah. The primary reason there aren't several more projects in my portfolio from recent years can be attributed to the amount of time I put into Galah. There is much more code written than what is in <a href="https://github.com/galah-group/galah">the main repository</a> (link is also below). Check out <a href="https://github.com/galah-group">our organization's GitHub account</a> to see the various repos that go into making Galah work. You can probably imagine the amount of planning and discussion that went into each of those projects as well.
            </p>
            <p>
                Working on Galah has been more fun than I ever expected, and I hope that eventually I'll be able to greatly improve the learning experience for CS students across the world.
            </p>
            <footer class="actions">
                <a href="http://youtu.be/8VvS5MVAy7w" class="pure-button pure-button-primary">Video Demo</a>
                <a href="http://www.galahgroup.com/galah" class="pure-button">Development Group's Website</a>
                <a href="https://github.com/galah-group/galah" class="pure-button">GitHub</a>
            </footer>
        </article>
        <hr />
        <article class="project">
            <header>
                <h2><a id="superzippy" href="#superzippy">Superzippy</a></h2>
                <span class="language">Python</span>
                <time datetime="2011/now">2013 to now</time>
            </header>
            <p class="project-headline">
                A simple tool for turning a multi-file, multi-dependency Python script into a single executable file.
            </p>
            <aside class="project-shot" data-video="http://www.youtube.com/embed/B10BFc5PDK0?rel=0" data-width="420" data-height="315" style="display: none"></aside>
            <p>
                I often make little Python utilities that I'd like to share. Unfortunately, installing a Python program that's more than a few files can be intimidating to non-Python developers. Superzippy solves this problem by providing an easy way to transform my complicated scripts into easily downloadable, runnable files.
            </p>
            <p>
                The motivation for this utility came from my work on <a href="#galah">Galah</a> (another project featured in my portfolio) because we needed to distribute a <a href="https://github.com/galah-group/galah-apiclient">command line Python application</a> to teachers, teaching assistants, and system administrators. Without Superzippy we had to send them installation instructions with every release, now we can just send them a single file and tell them to run it.
            </p>
            <footer class="actions">
                <a href="http://youtu.be/B10BFc5PDK0" class="pure-button pure-button-primary">Video Demo</a>
                <a href="https://github.com/brownhead/superzippy" class="pure-button">GitHub</a>
            </footer>
        </article>
        <hr />
        <article class="project">
            <header>
                <h2><a id="life" href="#life">Processing Life</a></h2>
                <span class="language">Processing</span>
                <time datetime="2013">2013</time>
            </header>
            <p class="project-headline">
                A small experiment with the <a href="http://processingjs.org/">Processing.js</a> library based on <a href="http://en.wikipedia.org/wiki/Conway's_Game_of_Life">Conway's Game of Life</a>.
            </p>
            <aside class="project-shot">
                <a href="/res/img/projectshots/processing.png">
                    <img class="project-shot" src="/res/img/projectshots/processing.png" alt="Processing Screenshot" />
                </a>
            </aside>
            <p>
                I created this experiment after seeing <a href="http://carlosbergen.com">Carlos Bergen's simple website</a> and becoming interested in the <a href="http://www.processing.org/">Processing</a> project. I love <a href="http://en.wikipedia.org/wiki/Conway's_Game_of_Life">Conway's Game of Life</a> because of the extreme contrast between the simplicity of its rules and the complexity of the patterns that emerge, so I decided to implement the game with my own added twist.
            </p>
            <p>
                On top of the classic rules, I have given each cell its own sense of time, such that the cells are updated at different intervals. That interval is a function of the cell's proximity to the cursor. The effect is very interesting and I encourage you to check out the live demo linked to below.
            </p>
            <footer class="actions">
                <a href="http://johncs.us" class="pure-button pure-button-primary">Live Demo</a>
                <a href="https://github.com/brownhead/processing-life" class="pure-button">GitHub</a>
            </footer>
        </article>
        <hr />
        <article class="project">
            <header>
                <h2><a id="min-max-heap" href="#min-max-heap">Min-Max Heap</a></h2>
                <span class="language">C++</span>
                <time datetime="2010">2010</time>
            </header>
            <p>
                A C++ implementation of a very interesting data structure that allows efficient removal of the largest and the smallest item from the same heap.
            </p>
            <p>
                Freshman year of college I was working on an interesting program that would allow me to automatically discover my ideal course schedule. Along the way, I realized I needed a way to efficiently get both the maximum and minimum element from a heap. After looking around a little bit, I saw a description of a data structure called a Min-Max Heap that supposedly offered good performance. I crafted my own implementation of this heap, but I found out afterwards that another data structure, called and Interval Heap, has better real-world performance. Regardless, I'm still happy with my implementation.
            </p>
            <p>
                I created a <a href="http://forestofcode.blogspot.com/2010/12/c-min-max-heap-implementation.html">blog post</a> about it at the time that explains the data structure in detail.
            </p>
            <footer class="actions">
                <a href="https://github.com/brownhead/minmaxheap-cpp" class="pure-button">GitHub</a>
            </footer>
        </article>
        <hr />
        <article class="project">
            <header>
                <h2><a id="particles" href="#particles">Particles</a></h2>
                <span class="language">C</span>
                <time datetime="2009">2009</time>
            </header>
            <p>
                A C program using <a href="http://www.libsdl.org/">SDL</a> that attempts to emulate the effect of the <a href="http://www.chromeexperiments.com/detail/liquid-particles/">Liquid Particles Chrome Experiment</a>.
            </p>
            <aside class="project-shot" data-video="http://www.youtube.com/embed/qaRXcsJBT5Q?rel=0" data-width="420" data-height="315">
                <a href="/res/img/projectshots/particles.gif">
                    <img class="project-shot" src="/res/img/projectshots/particles.gif" alt="Particles Screenshot" />
                </a>
            </aside>
            <p>
                I remember seeing the Chrome Experiment back in high school as I was sitting in my communication class and wanting so badly to figure out how they made the effect so incredible. Only after creating my own version of it was I able to figure it out. The simulation reminds me of <a href="http://en.wikipedia.org/wiki/Conway's_Game_of_Life">Conway's Game of Life</a> in that a simple concept and set of rules gives birth to a simulation that has a lot of subtle complexity.
            </p>
            <p>
                Check out the video demo below to see me play around with it and talk a little about its motivation and origins. Then if you have some extra time, you can download, compile, and run the source code from GitHub. It should compile onto most platforms (<a href="http://en.wikipedia.org/wiki/Simple_DirectMedia_Layer#Ports">the SDL library supports quite a few</a>).
            </p>
            <footer class="actions">
                <a href="http://youtu.be/qaRXcsJBT5Q" class="pure-button pure-button-primary">Video Demo</a>
                <a href="https://github.com/brownhead/particles" class="pure-button">GitHub</a>
            </footer>
        </article>
        <hr />
        <article class="project">
            <header>
                <h2><a id="agc4" href="#agc4">Anti-Gravity Connect 4</a></h2>
                <span class="language">Flash, ActionScript</span>
                <time datetime="2008">2008</time>
            </header>
            <p>
                A flash game that puts a big twist on the classic game of Connect 4.
            </p>
            <aside class="project-shot" data-video="http://www.youtube.com/embed/4BMXRENMO-c?rel=0" data-width="420" data-height="315">
                <a href="/res/img/projectshots/agc4.png">
                    <img class="project-shot" src="/res/img/projectshots/agc4.png" alt="AGC4 Screenshot" />
                </a>
            </aside>
            <p>
                The game's concept came well before the program, and was devised in a particularly dull math class Sophemore year of high school. My friend and I would play Connect 4 on graph paper but after many weeks of playing it we got a little bored so I came up with a twist on the classic game. I made the board into a round-ish shape and changed the rules so that you could go anywhere as long as the move would make sense given that down was any of 4 different ways. Check out the <a href="http://youtu.be/4BMXRENMO-c">video demo</a> (link is also below) for a walk through of the rules and a clip of my friend beating me in my own game.
            </p>
            <p>
                I have left my young blunderings untouched, therefore the game has a few noticeable issues (most egregious being an unmutable, loud audio track). It was one of my first ever Flash games however, so the love and nostalgia I feel for it is enormous. I hope you have a moment to learn the rules with a friend and challenge each-other's wits. Let me know if you enjoyed playing it, I'd love to hear what you thought.
            </p>
            <p>
                <b>Warning: Live Demo has audio.</b>
            </p>
            <footer class="actions">
                <a href="http://youtu.be/4BMXRENMO-c" class="pure-button pure-button-primary">Video Demo</a>
                <a href="/res/swf/agc4.swf" class="pure-button pure-button-primary">Live Demo</a>
                <a href="https://github.com/brownhead/agc4" class="pure-button">GitHub</a>
            </footer>
        </article>
        <hr />
        <article class="project">
            <header>
                <h2><a id="cloak" href="#cloak">Cloak</a></h2>
                <span class="language">Visual Basic 6</span>
                <time datetime="2005/2007">2005 to 2007</time>
            </header>
            <p>
                A Visual Basic 6 application that lets you hide any window on your Windows PC immediately, and temporarily, at the press of a hotkey.
            </p>
            <aside class="project-shot" data-video="http://www.youtube.com/embed/v3CLM8DiLXA?rel=0" data-width="420" data-height="315">
                <a href="/res/img/projectshots/cloak.png">
                    <img class="project-shot" src="/res/img/projectshots/cloak.png" alt="Cloak Screenshot" />
                </a>
            </aside>
            <p>
                This was one of my first large applications and it went through three different major versions as I made my way through middle school (the first two have been lost unfortunately). It began when a user came onto a forum I visited frequently asking for a way to keep his parents from knowing that he was playing <a href="http://www.runescape.com">runescape</a>. I was sympathetic with his cause and quickly created the first version of Cloak. Over the years I improved what I had made until I released the third version of the program right before I entered High School.
            </p>
            <p>
                The program is a little rough around the edges, but I'm fairly happy with its performance, especially since I was still in middle school when I created it. I think I may one day revisit the idea and create an update written with some more modern development tools.
            </p>
            <footer class="actions">
                <a href="http://youtu.be/v3CLM8DiLXA" class="pure-button pure-button-primary">Video Demo</a>
                <a href="https://github.com/brownhead/cloak" class="pure-button">GitHub</a>
            </footer>
        </article>
        <hr />
        <footer id="page-footer">
            <section>
                Copyright 2013 John Sullivan. <a href="http://creativecommons.org/licenses/by-sa/3.0/">Some rights reserved</a>.
            </section>
            <section>
                Hosted on <a href="http://pages.github.com/">GitHub pages</a>.
            </section>
        </footer>
    </div>
    <script type="text/javascript">
        // Google Analytics
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-27792549-1']);
        _gaq.push(['_setDomainName', 'johnsullivan.name']);
        _gaq.push(['_trackPageview']);

        (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();

        // Original code from detectmobilebrowsers.com
        var RE1 = /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i;
        var RE2 = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i;
        function is_mobile(ua) {
            if (ua === null) {
                ua = navigator.userAgent || navigator.vendor || window.opera;
            }

            return RE1.test(ua) || RE2.test(ua.substr(0,4));
        }

        function make_videos() {
            // Embedded videos on a mobile device can be fairly unpleasant.
            if (is_mobile(null)) {
                return;
            }

            var asides = document.getElementsByTagName("aside");
            for (var i = 0; i < asides.length; i++) {
                if (asides[i].hasAttribute("data-video")) {
                    var video_iframe = document.createElement("iframe");
                    attributes = {
                        "src": asides[i].getAttribute("data-video"),
                        "width": asides[i].getAttribute("data-width"),
                        "height": asides[i].getAttribute("data-height"),
                        "frameborder": "0",
                        "allowfullscreen": "true",
                        "class": "video"
                    };
                    for (var k in attributes) {
                        video_iframe.setAttribute(k, attributes[k]);
                    }

                    var anchors = asides[i].getElementsByTagName("a");
                    if (anchors.length === 0) {
                        asides[i].appendChild(video_iframe);
                        asides[i].style.display = "block";
                    } else if (anchors.length === 1) {
                        asides[i].appendChild(video_iframe);
                        anchors[0].className += " hidden-image";
                    } else {
                        throw Error("DOM not in expected state.")
                    }

                }
            }
        }
        make_videos();
    </script>
</body>
</html>
